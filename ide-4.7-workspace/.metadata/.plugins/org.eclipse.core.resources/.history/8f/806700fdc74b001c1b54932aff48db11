#include <stdlib.h>
#include <stdio.h>
#include <errno.h>
#include <string.h>
#include <process.h>
#include <ha/ham.h>

#define OK 100500

void registerTask(char* taskName, char* executableName) {
	ham_connect(0);

	char* relaunchPath = calloc(150, sizeof(char));
	sprintf(relaunchPath, "/tmp/%s", executableName);

	ham_entity_t *ehdl = ham_attach(taskName, ND_LOCAL_NODE, -1, relaunchPath, 0);
	if (ehdl == NULL) {
		char* errMsg = calloc(100, sizeof(char));
		sprintf(errMsg, "ham_attach error: %s", strerror(errno));
		perror(errMsg);
		return OK;
	}

	ham_condition_t *chdl = ham_condition(ehdl, CONDDEATH, "death", HREARMAFTERRESTART);
	if (chdl == NULL) {
		perror("ham_condition(death) error");
		return EXIT_FAILURE;
	}

	ham_action_t *ahdl = ham_action_restart(chdl, "restart", "/tmp/qnx-text-project_g taskAirbag", HREARMAFTERRESTART);
	if (ahdl == NULL) {
		perror("initHam() ham_action_restart(restart) error");
		return EXIT_FAILURE;
	}

	ham_disconnect(0);

	return OK;
}

int main(int argc, char *argv[]) {
	registerTask("airbag", "qnx-text-project_g taskAirbag")




	return EXIT_SUCCESS;
}
